In JavaScript V1
If we want to use an external JAR we need to add it to auxiliary files in JS filter and use it as follows:

var assertion = Packages.com.philips.ibe.SamlAssertion.AssertionBuilder.doSAMLAssertion();

Where

com.philips.ibe.SamlAssertion is the package
AssertionBuilder is the class
doSAMLAssertion is the method to be called


To use the same in JavaScript V2:

Add the Class to rhapsody.properties

# Additional Java classes which are accessible from the JavaScript (v.2) filter. This property is dynamic. Changes to this property will be
# picked up without a restart of the Rhapsody Engine
dynamic.JavaScriptService.JavaAccess=com.philips.ibe.SamlAssertion.AssertionBuilder

Restart the service

Add the JAR to auxiliary file in the filter

Call the same method in the following way:

Import the class as Java.type
var javaImp=Java.type("com.philips.ibe.SamlAssertion.AssertionBuilder");
Call the mehtod with the instance of the class
var assertion=javaImp.doSAMLAssertion();



JavaScript (v.2) filter, by default, only has access to a select number of Java classes. 

The following classes and packages are exposed by default to the JavaScript (v.2) filter:
java.lang.Math, java.text.SimpleDateFormat, java.util.Calendar, java.util.Date, java.util.Locale, java.util.TimeZone, java.util.concurrent.TimeUnit, org.joda.time.DateTime.
Additionally, classes in the following packages are also exposed:
java.time, java.time.temporal, java.time.format
